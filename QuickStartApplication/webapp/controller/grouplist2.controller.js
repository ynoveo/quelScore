sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/ui/model/json/JSONModel",
	"sap/m/MessageToast",
	"sap/ui/core/routing/History"
], function (Controller, JSONModel, Mst, History) {
	"use strict";
	return Controller.extend("QuickStartApplication.controller.grouplist2", {
		onInit: function () {
//			this._oPage = this.byId("PageGroup");
			var oModel = new JSONModel();
			//oModel.loadData("http://www.quelscore.com/JSON_V2016.php?action=MATCHLIST&email=francois.dumont@ynoveo.fr&pass=azerty&phase=A");
			oModel.loadData("../webapp/localService/userGroup.json");
			this.getView().setModel(oModel);
//			var oCModel=sap.ui.getCore().getModel("global");
//			this._oPage.setTitle(oCModel.getProperty("/activeGroupID"));
			sap.ui.core.UIComponent.getRouterFor(this).getRoute("UserList").attachPatternMatched(this.onIDMatched, this);
		},

		// This method is registered with the router in onInit. Therefore, it is called whenever the URL is changed.
		// Note that there are two possible reasons for such a change:
		// - The user has entered a URL manually (or using browser facilities, such as a favorite)
		// - Navigation to a route was triggered programmatically
		onIDMatched: function(oEvent) {
			var sId = decodeURIComponent(oEvent.getParameter("arguments").groupId);
			sap.ui.getCore().getModel("global").setProperty("/activeGroupID", sId);
//			this._bindView("/PurchaseOrders('" + sPOId + "')");
			this._oPage = this.byId("PageGroup");
			this._oPage.setTitle(sId);
		},

			/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf QuickStartApplication.QuickStartApplication..view.view.grouplist2
		 */
    	onBeforeRendering: function() {
//			this._oPage = this.byId("PageGroup");
//			var oCModel=sap.ui.getCore().getModel("global");
//			this._oPage.setTitle(oCModel.getProperty("/activeGroupID"));    
    	},
    /**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf QuickStartApplication.QuickStartApplication..view.view.grouplist2
		 */
    	onAfterRendering: function() {
//			this._oPage = this.byId("PageGroup");
//			var oCModel=sap.ui.getCore().getModel("global");
//			this._oPage.setTitle(oCModel.getProperty("/activeGroupID"));        
    	},
    	onNavBack: function () {
			//      This code was generated by the layout editor.
			var oHistory, sPreviousHash;
			oHistory = History.getInstance();
			sPreviousHash = oHistory.getPreviousHash();
			if (sPreviousHash !== undefined) {
				window.history.go(-1);
			} else {
				this.getRouter().navTo("appHome", {}, true	/*no history*/);
			}
		},
    /**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf QuickStartApplication.QuickStartApplication..view.view.grouplist2
		 */
    //	onExit: function() {
    //
    //	}

		/**
	*@memberOf QuickStartApplication.controller.grouplist2
	*/
onJoinGroup: function () {
//This code was generated by the layout editor.
		}
	});
});